- if @merge_request.ff_merge_possible?
  = form_for [:ff_merge, @project.namespace.becomes(Namespace), @project, @merge_request], remote: true, method: :post, html: { class: 'accept-mr-form js-requires-input' } do |f|
    = hidden_field_tag :authenticity_token, form_authenticity_token
    .accept-merge-holder.clearfix.js-toggle-container
      .accept-action
        = f.button class: "btn btn-create accept-mr" do
          Accept Merge Request

      .accept-control
        Fast-forward merge without creating merge commit
      = render "projects/merge_requests/remove_source_branch"
- else
  = form_for [:rebase, @project.namespace.becomes(Namespace), @project, @merge_request],
    remote: false, method: :post, html: { class: 'accept-mr-form js-requires-input' } do |f|
    = hidden_field_tag :authenticity_token, form_authenticity_token
    .accept-merge-holder.clearfix.js-toggle-container
      - if @merge_request.target_project.merge_requests_rebase_enabled && can_rebase?(@merge_request.source_project, @merge_request.source_branch)
        - if @merge_request.rebase_in_progress?
          %h4 Rebase in progress... It can take a while. Reload at will.
        - else
          .accept-action
            = f.button class: "btn btn-reopen rebase-mr" do
              Rebase onto #{@merge_request.target_branch}
      .accept-control
        Fast-forward merge is not possible. Branch must be rebased first

:coffeescript
  $('.accept-mr-form').on 'ajax:before', ->
    btn = $('.accept-mr')
    btn.disable()
    btn.html("<i class='fa fa-spinner fa-spin'></i> Merge in progress")

  $('.rebase-mr-form').on 'ajax:before', ->
    btn = $('.rebase-mr')
    btn.disable()
    btn.html("<i class='fa fa-spinner fa-spin'></i> Rebase in progress. It could take some time")